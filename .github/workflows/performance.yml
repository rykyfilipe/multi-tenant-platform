name: Performance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'next.config.ts'

permissions:
  contents: read

jobs:
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd "pg_isready -U postgres -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma Client
      run: npx prisma generate
      
    - name: Setup test database
      run: |
        npx prisma migrate deploy
        npm run db:seed
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test_db
        
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        DIRECT_URL: postgresql://postgres:postgres@localhost:5432/test_db
        NEXTAUTH_SECRET: test-secret-key-for-performance
        NEXTAUTH_URL: http://localhost:3000
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN || '' }}
        
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: .lighthouseci/
        retention-days: 30
